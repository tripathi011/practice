# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

parameters:
  circleci_image:
    type: string
    default: circleci/node:13.8.0

orbs: 
     slack: circleci/slack@3.4.2
    
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
      - run: echo "My pipeline id is << pipeline.id >> and my git branch is << pipeline.git.branch >>."
      - run: printenv
      - checkout
      - run: pwd
      - run: node -v 
      - run: ls -Rla ~
      - run: df -h
      - run: free -h

  build-frontend:
    docker:
      - image: << pipeline.parameters.circleci_image >>
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Compile the code
          command: |
            cd frontend
            node --openssl-legacy-provider ./node_modules/.bin/gatsby build
            npm run build
      - slack/status

  test-frontend:
    docker:
      - image: << pipeline.parameters.circleci_image >>
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Test the code
          command: |
            cd frontend
            npm run test
      - slack/status

  analyze-frontend:
    docker:
      - image: << pipeline.parameters.circleci_image >>
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            cd frontend
            npm install
      - run:
          name: Analyze the code
          command: |
            cd frontend
            npm audit fix --audit-level=critical --force
      - slack/status                

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  hello-workflow:
    jobs:
      - hello:
          filters:
            branches:
              ignore: main
      - build-frontend:
          requires:
            - hello
          filters:
            branches:
              ignore: main
      - test-frontend:
          requires:
            - build-frontend
          filters:
            branches:
              ignore: main
      - analyze-frontend:
          requires:
            - test-frontend
          filters:
            branches:
              ignore: main